plugins {
    // Apply the java-library plugin for API and implementation separation.
    id 'java'
    id 'java-library'

    // Adiciona o plugin para permitir a publicação em um repositório Maven.
    id 'maven-publish'
}
version = '0.1.0-SNAPSHOT'
group = 'com.jdstudio.engine'

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}
dependencies {
    
    implementation 'org.json:json:20240303'
    // Use JUnit Jupiter for testing.
    
    testImplementation libs.junit.jupiter
    //jaxDoclet "some.interesting:Dependency:1.0"

    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api libs.commons.math3

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation libs.guava
}

// 5. Configuração do Java: Toolchain e geração automática dos JARs.
java {
    // Garante que o projeto use Java 21.
    toolchain {
        languageVersion.set(JavaLanguageVersion.of(21))
    }

    // Comandos "mágicos": Automaticamente criam e anexam
    // os JARs de código-fonte e Javadoc à publicação.
    withSourcesJar()
    withJavadocJar()
}

//utf8 encoding for all source files
tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}


// Define o que será publicado.
publishing {
    publications {
        // Define uma publicação chamada 'mavenJava'.
        mavenJava(MavenPublication) {
            // "from components.java" pega o resultado da compilação Java
            // e, graças ao bloco 'java' acima, também inclui os fontes e o javadoc.
            from components.java
        }
    }
    repositories {
        // Define o destino da publicação como o seu repositório Maven local.
        mavenLocal()
    }
}

configurations.all {
    resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}



//block of comments to gradle commands
/*
    To build the project, run:
    ./gradlew build

    To publish the library to a local Maven repository, run:
    ./gradlew publishToMavenLocal

    To run tests, use:
    ./gradlew test

    For more information on Gradle commands, refer to the Gradle documentation.
*/